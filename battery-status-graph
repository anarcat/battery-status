#!/bin/sh
# License: GNU Public License v2 or later at your choice.

input=/var/log/hjemmenett-battery-status.log
filename="${1}"

# manufacturer,model_name,technology
type=$(head -2 "$input" | tail -1 | cut -d, -f2-4 | tr , " ")

(
    cat <<EOF
# autoscale the format of the X axis, inspired by:
# http://stackoverflow.com/questions/19883155/mixing-date-and-time-on-gnuplot-xaxis
fmt = "%s"
stats '$input' using  (strptime(fmt, stringcolumn(1))) nooutput
t = int(STATS_min)
t_start = t - tm_hour(t)*60*60 - tm_min(t)*60 - tm_sec(t)
num_days = 2 + (int(STATS_max) - t)/(24*60*60)

set xdata time
set timefmt "%s"
set format x "%Y-%m-%d"
set datafile separator ","
set title 'Battery statistics $type'
set ylabel 'Percent'
set xlabel 'Time'
set grid

set timefmt fmt
set xtics 4*60*60
set for [i=0:num_days] xtics add (strftime('%Y-%m-%d', t_start+(i-1)*24*60*60) t_start+(i-1)*24*60*60)
set format x '%H:%M'
EOF
    if [ "$filename" ]; then
        cat <<EOF
set term png
set output "$filename"
EOF
    fi
    cat <<EOF
plot "$input" using 1:(100 * \$8 / \$7) \
  smooth unique axis x1y1 title "Battery level %" \
    with lines linewidth 0.1 linecolor rgb 'grey',"$input" using 1:(100 * \$6 / \$7) \
  smooth unique axis x1y1 title "Battery full capacity %" \
    with lines linewidth 1 linecolor rgb 'red',"$input" using 1:(100 * \$7 / \$7) \
  smooth unique axis x1y1 title "Battery design capacity %" \
    with lines linewidth 1 linecolor rgb 'black'
EOF
) | gnuplot -p

if [ "$filename" ] ; then
    echo "PNG graph $filename created."
fi
